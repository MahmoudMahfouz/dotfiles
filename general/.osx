## Important ##

defaults write com.apple.LaunchServices LSQuarantine -bool false;
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true;
defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144;
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false;
defaults write NSGlobalDomain KeyRepeat -int 0;
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false;
defaults write com.apple.finder QuitMenuItem -bool true;
defaults write com.apple.finder ShowPathbar -bool true;
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf";
defaults write NSGlobalDomain com.apple.springing.enabled -bool true;
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true;
defaults write com.apple.dock minimize-to-application -bool true;
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true;
defaults write com.apple.dock show-process-indicators -bool true;
defaults write com.apple.dashboard mcx-disabled -bool true;
defaults write com.apple.dock autohide-delay -float 0;
defaults write com.apple.dock autohide-time-modifier -float 0;
defaults write com.apple.dock autohide -bool true;
defaults write com.apple.dock showhidden -bool true;
defaults write com.apple.appstore WebKitDeveloperExtras -bool true;
defaults write com.apple.appstore ShowDebugMenu -bool true;
sudo systemsetup -setrestartfreeze on;


###############################################################################
# SSD-specific tweaks                                                         #
###############################################################################

# running "Disable local Time Machine snapshots"
sudo tmutil disablelocal;

# running "Disable hibernation (speeds up entering sleep mode)"
sudo pmset -a hibernatemode 0;

# running "Remove the sleep image file to save disk space"
sudo rm -rf /Private/var/vm/sleepimage;
# running "Create a zero-byte file instead"
sudo touch /Private/var/vm/sleepimage;
# running "…and make sure it can’t be rewritten"
sudo chflags uchg /Private/var/vm/sleepimage;

## running "Disable the sudden motion sensor as it’s not useful for SSDs"
# sudo pmset -a sms 0;

################################################
bot "Standard System Changes"
################################################
# running "always boot in verbose mode (not OSX GUI mode)"
sudo nvram boot-args="-v";

# running "allow 'locate' command"
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist > /dev/null 2>&1;

# running "Set standby delay to 24 hours (default is 1 hour)"
sudo pmset -a standbydelay 86400;

# running "Disable the sound effects on boot"
sudo nvram SystemAudioVolume=" ";

# running "Menu bar: disable transparency"
defaults write NSGlobalDomain AppleEnableMenuBarTransparency -bool false;

# running "Menu bar: hide the Time Machine, Volume, User, and Bluetooth icons"
for domain in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do
	defaults write "${domain}" dontAutoLoad -array \
		"/System/Library/CoreServices/Menu Extras/TimeMachine.menu" \
		"/System/Library/CoreServices/Menu Extras/Volume.menu" \
		"/System/Library/CoreServices/Menu Extras/User.menu"
done;
defaults write com.apple.systemuiserver menuExtras -array \
	"/System/Library/CoreServices/Menu Extras/Bluetooth.menu" \
	"/System/Library/CoreServices/Menu Extras/AirPort.menu" \
	"/System/Library/CoreServices/Menu Extras/Battery.menu" \
	"/System/Library/CoreServices/Menu Extras/Clock.menu"
ok


# running "Set sidebar icon size to medium"
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2;

# running "Always show scrollbars"
defaults write NSGlobalDomain AppleShowScrollBars -string "Always";
# Possible values: `WhenScrolling`, `Automatic` and `Always`

# running "Increase window resize speed for Cocoa applications"
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001;

# running "Expand save panel by default"
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true;

# running "Expand print panel by default"
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true;

# running "Save to disk (not to iCloud) by default"
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false;

# running "Automatically quit printer app once the print jobs complete"
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true;

# running "Disable the “Are you sure you want to open this application?” dialog"
defaults write com.apple.LaunchServices LSQuarantine -bool false;

# running "Remove duplicates in the “Open With” menu (also see 'lscleanup' alias)"
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user;

# running "Display ASCII control characters using caret notation in standard text views"
# Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true;

# running "Disable automatic termination of inactive apps"
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true;

# running "Disable the crash reporter"
defaults write com.apple.CrashReporter DialogType -string "none";

# running "Set Help Viewer windows to non-floating mode"
defaults write com.apple.helpviewer DevMode -bool true;

# running "Reveal IP, hostname, OS, etc. when clicking clock in login window"
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName;

# running "Restart automatically if the computer freezes"
sudo systemsetup -setrestartfreeze on;

# # running "Disable Notification Center and remove the menu bar icon"
# launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist > /dev/null 2>&1;

# running "Disable smart quotes as they’re annoying when typing code"
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false;

# running "Disable smart dashes as they’re annoying when typing code"
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false;


###############################################################################
bot "Trackpad, mouse, keyboard, Bluetooth accessories, and input"
###############################################################################

# running "Trackpad: enable tap to click for this user and for the login screen"
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1;

# running "Trackpad: map bottom right corner to right-click"
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true;

# # running "Disable “natural” (Lion-style) scrolling"
# defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false;

# running "Increase sound quality for Bluetooth headphones/headsets"
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40;

# running "Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)"
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3;

# running "Use scroll gesture with the Ctrl (^) modifier key to zoom"
defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144;
# running "Follow the keyboard focus while zoomed in"
defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true;

# running "Disable press-and-hold for keys in favor of key repeat"
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false;

# running "Set a blazingly fast keyboard repeat rate"
defaults write NSGlobalDomain KeyRepeat -int 0;

# running "Set language and text formats (english/US)"
defaults write NSGlobalDomain AppleLanguages -array "en"
defaults write NSGlobalDomain AppleLocale -string "en_US@currency=USD"
defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
defaults write NSGlobalDomain AppleMetricUnits -bool true;

# running "Disable auto-correct"
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false;

###############################################################################
bot "Configuring the Screen"
###############################################################################

# running "Require password immediately after sleep or screen saver begins"
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0;

# running "Save screenshots to the desktop"
defaults write com.apple.screencapture location -string "${HOME}/Desktop";

# running "Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)"
defaults write com.apple.screencapture type -string "png";

# running "Disable shadow in screenshots"
defaults write com.apple.screencapture disable-shadow -bool true;

# running "Enable subpixel font rendering on non-Apple LCDs"
defaults write NSGlobalDomain AppleFontSmoothing -int 2;

# running "Enable HiDPI display modes (requires restart)"
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true;

###############################################################################
bot "Finder Configs"
###############################################################################

# running "Allow quitting via ⌘ + Q; doing so will also hide desktop icons"
defaults write com.apple.finder QuitMenuItem -bool true;

# running "Disable window animations and Get Info animations"
defaults write com.apple.finder DisableAllAnimations -bool true;

# running "Set Desktop as the default location for new Finder windows"
# For other paths, use `PfLo` and `file:///full/path/here/`
defaults write com.apple.finder NewWindowTarget -string "PfDe"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Desktop/";

# running "Show hidden files by default"
defaults write com.apple.finder AppleShowAllFiles -bool true;

# running "Show all filename extensions"
defaults write NSGlobalDomain AppleShowAllExtensions -bool true;

# running "Show status bar"
defaults write com.apple.finder ShowStatusBar -bool true;

# running "Show path bar"
defaults write com.apple.finder ShowPathbar -bool true;

# running "Allow text selection in Quick Look"
defaults write com.apple.finder QLEnableTextSelection -bool true;

# running "Display full POSIX path as Finder window title"
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true;

# running "When performing a search, search the current folder by default"
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf";

# running "Disable the warning when changing a file extension"
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false;

# running "Enable spring loading for directories"
defaults write NSGlobalDomain com.apple.springing.enabled -bool true;

# running "Remove the spring loading delay for directories"
defaults write NSGlobalDomain com.apple.springing.delay -float 0;

# running "Avoid creating .DS_Store files on network volumes"
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true;

# running "Disable disk image verification"
defaults write com.apple.frameworks.diskimages skip-verify -bool true
defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true;

# running "Automatically open a new Finder window when a volume is mounted"
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true;

# running "Use list view in all Finder windows by default"
# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv";

# running "Disable the warning before emptying the Trash"
defaults write com.apple.finder WarnOnEmptyTrash -bool false;

# # running "Empty Trash securely by default"
# defaults write com.apple.finder EmptyTrashSecurely -bool true;

# running "Enable AirDrop over Ethernet and on unsupported Macs # running Lion"
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true;

# running "Show the ~/Library folder"
chflags nohidden ~/Library;


# running "Expand the following File Info panes: “General”, “Open with”, and “Sharing & Permissions”"
defaults write com.apple.finder FXInfoPanesExpanded -dict \
	General -bool true \
	OpenWith -bool true \
	Privileges -bool true;

###############################################################################
bot "Dock & Dashboard"
###############################################################################

# running "Enable highlight hover effect for the grid view of a stack (Dock)"
defaults write com.apple.dock mouse-over-hilite-stack -bool true;

# running "Set the icon size of Dock items to 36 pixels"
defaults write com.apple.dock tilesize -int 45;

# running "Change minimize/maximize window effect to scale"
defaults write com.apple.dock mineffect -string "genie";

# running "Minimize windows into their application’s icon"
defaults write com.apple.dock minimize-to-application -bool true;

# running "Enable spring loading for all Dock items"
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true;

# running "Show indicator lights for open applications in the Dock"
defaults write com.apple.dock show-process-indicators -bool true;

# running "Don’t animate opening applications from the Dock"
defaults write com.apple.dock launchanim -bool false;

# running "Speed up Mission Control animations"
defaults write com.apple.dock expose-animation-duration -float 0.1;
defaults write com.apple.dock workspaces-swoosh-animation-off -bool YES;


# running "group windows by application in Mission Control"
# (i.e. use the old Exposé behavior instead)
defaults write com.apple.dock expose-group-by-app -bool true;

# running "Disable Dashboard"
defaults write com.apple.dashboard mcx-disabled -bool true;

# running "Don’t show Dashboard as a Space"
defaults write com.apple.dock dashboard-in-overlay -bool true;

# running "Don’t automatically rearrange Spaces based on most recent use"
defaults write com.apple.dock mru-spaces -bool false;

# running "Remove the auto-hiding Dock delay"
defaults write com.apple.dock autohide-delay -float 0;
# running "Remove the animation when hiding/showing the Dock"
defaults write com.apple.dock autohide-time-modifier -float 0;

# running "Automatically hide and show the Dock"
defaults write com.apple.dock autohide -bool true;

# running "Make Dock icons of hidden applications translucent"
defaults write com.apple.dock showhidden -bool true;

# running "Make Dock more transparent"
defaults write com.apple.dock hide-mirror -bool true;

# running "Reset Launchpad, but keep the desktop wallpaper intact"
find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete;

# running "Add iOS Simulator to Launchpad"
sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone Simulator.app" "/Applications/iOS Simulator.app";


bot "Configuring Hot Corners"
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center

# running "Top left screen corner → Mission Control"
defaults write com.apple.dock wvous-tl-corner -int 2
defaults write com.apple.dock wvous-tl-modifier -int 0;
# running "Top right screen corner → Desktop"
defaults write com.apple.dock wvous-tr-corner -int 4
defaults write com.apple.dock wvous-tr-modifier -int 0;
# running "Bottom right screen corner → Start screen saver"
defaults write com.apple.dock wvous-br-corner -int 5
defaults write com.apple.dock wvous-br-modifier -int 0;

defaults write com.apple.dock workspaces-edge-delay -float 0.2

###############################################################################
bot "Spotlight"
###############################################################################

# # running "Hide Spotlight tray-icon (and subsequent helper)"
# sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search;

# running "Disable Spotlight indexing for any volume that gets mounted and has not yet been indexed"
# Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume.
sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes";
# running "Change indexing order and disable some file types from being indexed"
defaults write com.apple.spotlight orderedItems -array \
	'{"enabled" = 1;"name" = "APPLICATIONS";}' \
	'{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
	'{"enabled" = 1;"name" = "DIRECTORIES";}' \
	'{"enabled" = 1;"name" = "PDF";}' \
	'{"enabled" = 1;"name" = "FONTS";}' \
	'{"enabled" = 0;"name" = "DOCUMENTS";}' \
	'{"enabled" = 0;"name" = "MESSAGES";}' \
	'{"enabled" = 0;"name" = "CONTACT";}' \
	'{"enabled" = 0;"name" = "EVENT_TODO";}' \
	'{"enabled" = 0;"name" = "IMAGES";}' \
	'{"enabled" = 0;"name" = "BOOKMARKS";}' \
	'{"enabled" = 0;"name" = "MUSIC";}' \
	'{"enabled" = 0;"name" = "MOVIES";}' \
	'{"enabled" = 0;"name" = "PRESENTATIONS";}' \
	'{"enabled" = 0;"name" = "SPREADSHEETS";}' \
	'{"enabled" = 0;"name" = "SOURCE";}';
# running "Load new settings before rebuilding the index"
killall mds > /dev/null 2>&1;
# running "Make sure indexing is enabled for the main volume"
sudo mdutil -i on / > /dev/null;
## running "Rebuild the index from scratch"
#sudo mdutil -E / > /dev/null;

###############################################################################
bot "Activity Monitor"
###############################################################################

# running "Show the main window when launching Activity Monitor"
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true;

# running "Visualize CPU usage in the Activity Monitor Dock icon"
defaults write com.apple.ActivityMonitor IconType -int 5;

# running "Show all processes in Activity Monitor"
defaults write com.apple.ActivityMonitor ShowCategory -int 0;

# running "Sort Activity Monitor results by CPU usage"
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection -int 0;

###############################################################################
bot "Address Book, Dashboard, iCal, TextEdit, and Disk Utility"
###############################################################################

# running "Enable the debug menu in Address Book"
defaults write com.apple.addressbook ABShowDebugMenu -bool true;

# running "Enable Dashboard dev mode (allows keeping widgets on the desktop)"
defaults write com.apple.dashboard devmode -bool true;

###############################################################################
bot "Mac App Store"
###############################################################################

# running "Enable the WebKit Developer Tools in the Mac App Store"
defaults write com.apple.appstore WebKitDeveloperExtras -bool true;

# running "Enable Debug Menu in the Mac App Store"
defaults write com.apple.appstore ShowDebugMenu -bool true;

###############################################################################
bot "Google Chrome & Google Chrome Canary"
###############################################################################

# running "Allow installing user scripts via GitHub Gist or Userscripts.org"
defaults write com.google.Chrome ExtensionInstallSources -array "https://gist.githubusercontent.com/" "http://userscripts.org/*"
defaults write com.google.Chrome.canary ExtensionInstallSources -array "https://gist.githubusercontent.com/" "http://userscripts.org/*";
